(self.webpackChunk=self.webpackChunk||[]).push([[8786,743,5e3],{27694:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return m}});var r=n(87659),a=n(38345),s=n(54442),i=n(99138),o=n(18317),c=n.n(o),d=n(63242),u=(n(15807),JSON.parse('{"openapi":"3.0.0","tags":[{"name":"Accounts","description":"?module=account"},{"name":"Contracts","description":"?module=contract"},{"name":"Logs","description":"?module=logs"},{"name":"Stats","description":"?module=stats"},{"name":"Blocks","description":"?module=block"},{"name":"Transactions","description":"?module=transaction"}],"paths":{"/balance":{"get":{"tags":["Accounts"],"summary":"?module=account&action=balance&address={addressHash}&tag=latest","description":"Get ETH Balance for a single Address","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"balance"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xd5c12221882E587D0570AD2e00e85759e15D1BCC"},{"name":"tag","in":"query","description":"Block tag","schema":{"type":"string"},"default":"latest"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"string"},"status":{"type":"string"}}},"example":{"message":"OK","result":"8849151068756007981","status":"1"}}}}}}},"/balancemulti":{"get":{"tags":["Accounts"],"summary":"?module=account&action=balancemulti&address={addressHash1,addressHash2,addressHash3}&tag=latest","description":"Get ETH Balance for multiple Addresses in a single call","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"balancemulti"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts. Separate addresses by comma. Maximum of 20 addresses.","required":true,"schema":{"type":"string"},"default":"0xd5c12221882E587D0570AD2e00e85759e15D1BCC,0x1583a435897B38Adac501d1463adBCaD6B2EcDD8"},{"name":"tag","in":"query","description":"Block tag","schema":{"type":"string"},"default":"latest"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"account":"0xa31b0412a192943b2e6c5edca2670211cc7a8fe8","balance":"8035912637762766686","stale":false},{"account":"0xa0df0cbae6ef2078ec0f585db40a5afffef8f3ea","balance":"10701970636547593081","stale":false}],"status":"1"}}}}}}},"/txlist":{"get":{"tags":["Accounts"],"summary":"?module=account&action=txlist&address={addressHash}","description":"Get a list of \'Normal\' Transactions By Address","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"txlist"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0x8570345D90821DB5E38702d4701501CcFb265F09"},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to descending order. Available values: asc, desc","required":false,"schema":{"type":"string"},"default":""},{"name":"startblock","in":"query","description":"A nonnegative integer that represents the starting block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"endblock","in":"query","description":"A nonnegative integer that represents the ending block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockHash":"0x373d339e45a701447367d7b9c7cef84aab79c2b2714271b908cda0ab3ad0849b","blockNumber":"65204","confirmations":"5994246","contractAddress":"","cumulativeGasUsed":"122207","from":"0x3fb1cd2cd96c6d5c0b5eb3322d807b34482481d4","gas":"122261","gasPrice":"50000000000","gasUsed":"122207","hash":"0x98beb27135aa0a25650557005ad962919d6a278c4b3dde7f4f6a3a1e65aa746c","input":"0xf00d4b5d000000000000000000000000036c8cecce8d8bbf0831d840d7f29c9e3ddefa63000000000000000000000000c5a96db085dda36ffbe390f455315d30d6d3dc52","isError":"0","nonce":"0","timeStamp":"1439232889","to":"0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae","transactionIndex":"0","txreceipt_status":"1","value":"0"}],"status":"1"}}}}}}},"/txlistinternal":{"get":{"tags":["Accounts"],"summary":"?module=account&action=txlistinternal&txhash={transactionHash}","description":"Get internal transactions by transaction or address hash","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"txlistinternal"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction. A transaction hash or address hash is required.","required":true,"schema":{"type":"string"},"default":"0x0c382759b675810b83711a55532002b4b33affe2b3fde13084ea1d9cc080428b"},{"name":"address","in":"query","description":"A 160-bit code used for identifying accounts. An address hash or transaction hash is required.","required":false,"schema":{"type":"string"},"default":""},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to ascending order. Available values: asc, desc. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"string"},"default":""},{"name":"startblock","in":"query","description":"A nonnegative integer that represents the starting block number. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"endblock","in":"query","description":"A nonnegative integer that represents the ending block number. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockNumber":"6153702","callType":"delegatecall","contractAddress":"0x883103875d905c11f9ac7dacbfc16deb39655361","errCode":"","from":"0x2ca1e3f250f56f1761b9a52bc42db53986085eff","gas":"814937","gasUsed":"536262","index":"0","input":"","isError":"0","timeStamp":"1534362606","to":"","transactionHash":"0xd65b788c610949704a5f9aac2228c7c777434dfe11c863a12306f57fcbd8cdbb","type":"call","value":"5488334153118633"}],"status":"1"}}}}}}},"/tokentx":{"get":{"tags":["Accounts"],"summary":"?module=account&action=tokentx&address={addressHash}","description":"Get a list of \'ERC20 - Token Transfer Events\' by Address","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokentx"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0x1f1F2BF8942861E6194FDa1c0A9f13921c0Cf117"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":false,"schema":{"type":"string"},"default":""},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to descending order. Available values: asc, desc","required":false,"schema":{"type":"string"},"default":""},{"name":"startblock","in":"query","description":"A nonnegative integer that represents the starting block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"endblock","in":"query","description":"A nonnegative integer that represents the ending block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockHash":"0x6169c5dc05d0051564ba3eae8ebfbdefda640c5f5ffc095846b8aed0b44f64ea","blockNumber":"5997843","confirmations":"199384","contractAddress":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","cumulativeGasUsed":"1043649","from":"0x4e83362442b8d1bec281594cea3050c8eb01311c","gas":"44758","gasPrice":"7000000000","gasUsed":"37298","hash":"0xd65b788c610949704a5f9aac2228c7c777434dfe11c863a12306f57fcbd8cdbb","input":"0xa9059cbb00000000000000000000000021e21ba085289f81a86921de890eed30f1ad23750000000000000000000000000000000000000000000000008ac7230489e80000","logIndex":"0","nonce":"765","timeStamp":"1532086946","to":"0x21e21ba085289f81a86921de890eed30f1ad2375","tokenDecimal":"18","tokenName":"Maker","tokenSymbol":"MKR","transactionIndex":"27","value":"10000000000000000000"}],"status":"1"}}}}}}},"/tokennfttx":{"get":{"tags":["Accounts"],"summary":"?module=account&action=tokennfttx&address={addressHash}","description":"Get a list of \'ERC721 - Token Transfer Events\' by Address","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokennfttx"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0x1f1F2BF8942861E6194FDa1c0A9f13921c0Cf117"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":false,"schema":{"type":"string"},"default":""},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to descending order. Available values: asc, desc","required":false,"schema":{"type":"string"},"default":""},{"name":"startblock","in":"query","description":"A nonnegative integer that represents the starting block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"endblock","in":"query","description":"A nonnegative integer that represents the ending block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockHash":"0x6169c5dc05d0051564ba3eae8ebfbdefda640c5f5ffc095846b8aed0b44f64ea","blockNumber":"5997843","confirmations":"199384","contractAddress":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","cumulativeGasUsed":"1043649","from":"0x4e83362442b8d1bec281594cea3050c8eb01311c","gas":"44758","gasPrice":"7000000000","gasUsed":"37298","hash":"0xd65b788c610949704a5f9aac2228c7c777434dfe11c863a12306f57fcbd8cdbb","input":"0xa9059cbb00000000000000000000000021e21ba085289f81a86921de890eed30f1ad23750000000000000000000000000000000000000000000000008ac7230489e80000","logIndex":"0","nonce":"765","timeStamp":"1532086946","to":"0x21e21ba085289f81a86921de890eed30f1ad2375","tokenDecimal":"18","tokenName":"Maker","tokenSymbol":"MKR","transactionIndex":"27","value":"10000000000000000000"}],"status":"1"}}}}}}},"/tokenbalance":{"get":{"tags":["Accounts"],"summary":"?module=account&action=tokenbalance&contractaddress={contractAddressHash}&address={addressHash}","description":"Get token account balance for token contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokenbalance"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x765277EebeCA2e31912C9946eAe1021199B39C61"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xC89a761d1A596e41D8FFfe2A79cDA93CF6dCe028"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"4664287755","status":"1"}}}}}}},"/getminedblocks":{"get":{"tags":["Accounts"],"summary":"?module=account&action=getminedblocks&address={addressHash}","description":"Get list of Blocks Validated by Address","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getminedblocks"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockNumber":"3462296","blockReward":"5194770940000000000","timeStamp":"1491118514"}],"status":"1"}}}}}}},"/getLogs":{"get":{"tags":["Logs"],"summary":"?module=logs&action=getLogs&fromBlock={blockNumber}&toBlock={blockNumber}&address={addressHash}&topic0={firstTopic}","description":"Get event logs for an address and/or topics. Up to a maximum of 1,000 event logs.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"logs"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getLogs"},{"name":"fromBlock","in":"query","description":"A nonnegative integer that represents the starting block number. The use of \'latest\' is also supported.","required":true,"schema":{"type":"integer"},"default":"0"},{"name":"toBlock","in":"query","description":"A nonnegative integer that represents the ending block number. The use of \'latest\' is also supported.","required":true,"schema":{"type":"integer"},"default":"6867204"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts. An address and/or topic{x} is required.","required":true,"schema":{"type":"string"},"default":"0x33990122638b9132ca29c723bdf037f1a891a70c"},{"name":"topic0","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":true,"schema":{"type":"string"},"default":"0xf63780e752c6a54a94fc52715dbc5518a3b4c3c2833d301a204226548a2a8545"},{"name":"topic1","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":"0x72657075746174696f6e00000000000000000000000000000000000000000000"},{"name":"topic2","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":"0x000000000000000000000000d9b2f59f3b5c7b3c67047d2f03c3e8052470be92"},{"name":"topic3","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_1_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic1. Required if topic0 and topic1 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_2_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic2. Required if topic0 and topic2 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_3_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic3. Required if topic0 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic1_2_opr","in":"query","description":"A string representing the and|or operator for topic1 and topic2. Required if topic1 and topic2 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic1_3_opr","in":"query","description":"A string representing the and|or operator for topic1 and topic3. Required if topic1 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic2_3_opr","in":"query","description":"A string representing the and|or operator for topic2 and topic3. Required if topic2 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"address":"0x33990122638b9132ca29c723bdf037f1a891a70c","blockNumber":"0x5c958","data":"0x","gasPrice":"0xba43b7400","gasUsed":"0x10682","logIndex":"0x","timeStamp":"0x561d688c","topics":["0xf63780e752c6a54a94fc52715dbc5518a3b4c3c2833d301a204226548a2a8545","0x72657075746174696f6e00000000000000000000000000000000000000000000","0x000000000000000000000000d9b2f59f3b5c7b3c67047d2f03c3e8052470be92"],"transactionHash":"0x0b03498648ae2da924f961dda00dc6bb0a8df15519262b7e012b7d67f4bb7e83","transactionIndex":"0x"}],"status":"1"}}}}}}},"/tokensupply":{"get":{"tags":["Stats"],"summary":"?module=stats&action=tokensupply&contractaddress={contractAddressHash}","description":"Get ERC-20 or ERC-721 token total supply by contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokensupply"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"281494000000000000000000","status":"1"}}}}}}},"/ethsupply":{"get":{"tags":["Stats"],"summary":"?module=stats&action=ethsupply","description":"Get total supply in Wei from DB.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"ethsupply"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"2878078839451014303285383","status":"1"}}}}}}},"/getblockreward":{"get":{"tags":["Blocks"],"summary":"?module=block&action=getblockreward&blockno={blockNumber}","description":"Get Block And Uncle Rewards by BlockNo","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getblockreward"},{"name":"blockno","in":"query","description":"A nonnegative integer that represents the block number.","required":true,"schema":{"type":"integer"},"default":"1000"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"blockMiner":"0xbbbbbbbbbbbbbbbbbbbbbbbb5530ea015b900000","blockNumber":"1000","blockReward":"0","timeStamp":1680662089,"uncleInclusionReward":null,"uncles":null},"status":"1"}}}}}}},"/getblockcountdown ":{"get":{"tags":["Blocks"],"summary":"?module=block&action=getblockreward&blockno={blockNumber}","description":"Get Estimated Block Countdown Time by BlockNo","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getblockcountdown"},{"name":"blockno","in":"query","description":"A nonnegative integer that represents the block number.","required":true,"schema":{"type":"integer"},"default":"1000"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"blockMiner":"0xbbbbbbbbbbbbbbbbbbbbbbbb5530ea015b900000","blockNumber":"1000","blockReward":"0","timeStamp":1680662089,"uncleInclusionReward":null,"uncles":null},"status":"1"}}}}}}},"/getblocknobytime":{"get":{"tags":["Blocks"],"summary":"?module=block&action=getblocknobytimestamp={blockTimestamp}&closest={before/after}","description":"Get Block Number by Timestamp","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getblocknobytime"},{"name":"timestamp","in":"query","description":"A nonnegative integer that represents the block timestamp (Unix timestamp in seconds).","required":true,"schema":{"type":"integer"},"default":"1680662089"},{"name":"closest","in":"query","description":"Direction to find the closest block number to given timestamp. Available values: before/after.","required":true,"schema":{"type":"string"},"default":"before"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"blockNumber":"1000"},"status":"1"}}}}}}},"/getabi":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=getabi&address={addressHash}","description":"Get Contract ABI for Verified Contract Source Codes","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getabi"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0xB529283cB363703BD7c049D8Cf157249C2bC32dE"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"[{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"burn\\",\\"outputs\\":[{\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"is_expired\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"is_burnt\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_lifetime\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"}]","status":"1"}}}}}}},"/getsourcecode":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=getsourcecode&address={addressHash}","description":"Get Contract Source Code for Verified Contract Source Codes","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getsourcecode"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0xB529283cB363703BD7c049D8Cf157249C2bC32dE"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"ABI":"[{\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event\\"\\n}, {\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event2\\"\\n}, {\\n\\"type\\":\\"function\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\"}],\\n\\"name\\":\\"foo\\",\\n\\"outputs\\": []\\n}]\\n","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","ContractName":"Test","FileName":"{sourcify path or empty}","ImplementationAddress":"0x000000000000000000000000000000000000000e","IsProxy":"true","OptimizationUsed":"1","SourceCode":"pragma solidity >0.4.24;\\n\\ncontract Test {\\nconstructor() public { b = hex\\"12345678901234567890123456789012\\"; }\\nevent Event(uint indexed a, bytes32 b);\\nevent Event2(uint indexed a, bytes32 b);\\nfunction foo(uint a) public { emit Event(a, b); }\\nbytes32 b;\\n}\\n"},"status":"1"}}}}}}},"/verify":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=verify&addressHash={addressHash}&name={name}&compilerVersion={compilerVersion}&optimization={false}&contractSourceCode={contractSourceCode}","description":"Verify a contract with its source code and contract creation information.","operationId":""}},"/verify_via_sourcify":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=verify_via_sourcify&addressHash={addressHash}","description":"Verify a contract through Sourcify.","operationId":""}},"/verify_vyper_contract":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=verify_vyper_contract&addressHash={addressHash}&name={name}&compilerVersion={compilerVersion}&contractSourceCode={contractSourceCode}","description":"Verify a vyper contract with its source code and contract creation information.","operationId":""}},"/verifysourcecode":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=verifysourcecode&codeformat={solidity-standard-json-input}&contractaddress={contractaddress}&contractname={contractname}&compilerversion={compilerversion}&sourceCode={sourceCode}","description":"Verify a contract with Standard input JSON file. Its interface the same as Etherscan\'s API endpoint","operationId":""}},"/checkverifystatus":{"get":{"tags":["Contracts"],"summary":"?module=contract&action=checkverifystatus&guid={identifierString}","description":"Return status of the verification attempt (works in addition to verifysourcecode method)","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"checkverifystatus"},{"name":"guid","in":"query","description":"A string used for identifying verification attempt","required":true,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"ABI":"[{\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event\\"\\n}, {\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event2\\"\\n}, {\\n\\"type\\":\\"function\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\"}],\\n\\"name\\":\\"foo\\",\\n\\"outputs\\": []\\n}]\\n","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","ContractName":"Test","FileName":"{sourcify path or empty}","ImplementationAddress":"0x000000000000000000000000000000000000000e","IsProxy":"true","OptimizationUsed":"1","SourceCode":"pragma solidity >0.4.24;\\n\\ncontract Test {\\nconstructor() public { b = hex\\"12345678901234567890123456789012\\"; }\\nevent Event(uint indexed a, bytes32 b);\\nevent Event2(uint indexed a, bytes32 b);\\nfunction foo(uint a) public { emit Event(a, b); }\\nbytes32 b;\\n}\\n"},"status":"1"}}}}}}},"/gettxreceiptstatus":{"get":{"tags":["Transactions"],"summary":"?module=transaction&action=gettxreceiptstatus&txhash={transactionHash}","description":"Check Transaction Receipt Status","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"transaction"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"gettxreceiptstatus"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction.","required":true,"schema":{"type":"string"},"default":"0x7150e67815c085ae8af7efef7cd29a2fe6c874d78cab6a78fcf0f806df27dab1"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"status":"1"},"status":"1"}}}}}}},"/getstatus":{"get":{"tags":["Transactions"],"summary":"?module=transaction&action=getstatus&txhash={transactionHash}","description":"Get error status and error message. Also available through a GraphQL \'transaction\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"transaction"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getstatus"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction.","required":true,"schema":{"type":"string"},"default":"0x7150e67815c085ae8af7efef7cd29a2fe6c874d78cab6a78fcf0f806df27dab1"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"errDescription":"","isError":"0"},"status":"1"}}}}}}}}}')),p=n(62435),l=n(86074),m=function(){var e=(0,s.useSelector)((function(e){return e.chainList.chainSelect})),t=(0,p.useCallback)((function(){return"59144"===e.chainIdDec?(0,l.jsx)(i.Z,{className:"mb-[16px]",message:(0,l.jsx)("a",{target:"_blank",href:"https://lineascan.build/apis",rel:"noreferrer",children:"https://lineascan.build/apis"}),type:"info"}):"59140"===e.chainIdDec?(0,l.jsx)(i.Z,{className:"mb-[16px]",message:(0,l.jsx)("a",{target:"_blank",href:"https://goerli.lineascan.build/apis",rel:"noreferrer",children:"https://goerli.lineascan.build/apis"}),type:"info"}):void 0}),[e]);return(0,l.jsxs)(r._z,{ghost:!0,children:[t(),(0,l.jsx)(a.Z,{children:(0,l.jsx)(d.Z,{tryItOutEnabled:!0,spec:u,requestSnippetsEnabled:!0,requestInterceptor:function(t){if(t.hasOwnProperty("loadSpec")&&t.loadSpec)return t;var n=c()(t);return t.url=e.blockExplorerUrls[1]+(null==n?void 0:n.search),t}})})]})}},99138:function(e,t,n){"use strict";n.d(t,{Z:function(){return _}});var r=n(89739),a=n(4340),s=n(97937),i=n(21640),o=n(78860),c=n(94184),d=n.n(c),u=n(82225),p=n(62435),l=n(53124),m=n(5467),f=n(96159),g=n(15671),b=n(43144),y=n(32531),h=n(73568);let v=function(e){(0,y.Z)(n,e);var t=(0,h.Z)(n);function n(){var e;return(0,g.Z)(this,n),(e=t.apply(this,arguments)).state={error:void 0,info:{componentStack:""}},e}return(0,b.Z)(n,[{key:"componentDidCatch",value:function(e,t){this.setState({error:e,info:t})}},{key:"render",value:function(){const{message:e,description:t,children:n}=this.props,{error:r,info:a}=this.state,s=a&&a.componentStack?a.componentStack:null,i=void 0===e?(r||"").toString():e,o=void 0===t?s:t;return r?p.createElement(_,{type:"error",message:i,description:p.createElement("pre",{style:{fontSize:"0.9em",overflowX:"auto"}},o)}):n}}]),n}(p.Component);var q=v,k=n(67968),x=n(45503),A=n(14747);const j=(e,t,n,r,a)=>({backgroundColor:e,border:`${r.lineWidth}px ${r.lineType} ${t}`,[`${a}-icon`]:{color:n}}),C=e=>{const{componentCls:t,motionDurationSlow:n,marginXS:r,marginSM:a,fontSize:s,fontSizeLG:i,lineHeight:o,borderRadiusLG:c,motionEaseInOutCirc:d,alertIconSizeLG:u,colorText:p,paddingContentVerticalSM:l,alertPaddingHorizontal:m,paddingMD:f,paddingContentHorizontalLG:g}=e;return{[t]:Object.assign(Object.assign({},(0,A.Wf)(e)),{position:"relative",display:"flex",alignItems:"center",padding:`${l}px ${m}px`,wordWrap:"break-word",borderRadius:c,[`&${t}-rtl`]:{direction:"rtl"},[`${t}-content`]:{flex:1,minWidth:0},[`${t}-icon`]:{marginInlineEnd:r,lineHeight:0},"&-description":{display:"none",fontSize:s,lineHeight:o},"&-message":{color:p},[`&${t}-motion-leave`]:{overflow:"hidden",opacity:1,transition:`max-height ${n} ${d}, opacity ${n} ${d},\n        padding-top ${n} ${d}, padding-bottom ${n} ${d},\n        margin-bottom ${n} ${d}`},[`&${t}-motion-leave-active`]:{maxHeight:0,marginBottom:"0 !important",paddingTop:0,paddingBottom:0,opacity:0}}),[`${t}-with-description`]:{alignItems:"flex-start",paddingInline:g,paddingBlock:f,[`${t}-icon`]:{marginInlineEnd:a,fontSize:u,lineHeight:0},[`${t}-message`]:{display:"block",marginBottom:r,color:p,fontSize:i},[`${t}-description`]:{display:"block"}},[`${t}-banner`]:{marginBottom:0,border:"0 !important",borderRadius:0}}},w=e=>{const{componentCls:t,colorSuccess:n,colorSuccessBorder:r,colorSuccessBg:a,colorWarning:s,colorWarningBorder:i,colorWarningBg:o,colorError:c,colorErrorBorder:d,colorErrorBg:u,colorInfo:p,colorInfoBorder:l,colorInfoBg:m}=e;return{[t]:{"&-success":j(a,r,n,e,t),"&-info":j(m,l,p,e,t),"&-warning":j(o,i,s,e,t),"&-error":Object.assign(Object.assign({},j(u,d,c,e,t)),{[`${t}-description > pre`]:{margin:0,padding:0}})}}},I=e=>{const{componentCls:t,iconCls:n,motionDurationMid:r,marginXS:a,fontSizeIcon:s,colorIcon:i,colorIconHover:o}=e;return{[t]:{"&-action":{marginInlineStart:a},[`${t}-close-icon`]:{marginInlineStart:a,padding:0,overflow:"hidden",fontSize:s,lineHeight:`${s}px`,backgroundColor:"transparent",border:"none",outline:"none",cursor:"pointer",[`${n}-close`]:{color:i,transition:`color ${r}`,"&:hover":{color:o}}},"&-close-text":{color:i,transition:`color ${r}`,"&:hover":{color:o}}}}},O=e=>[C(e),w(e),I(e)];var E=(0,k.Z)("Alert",(e=>{const{fontSizeHeading3:t}=e,n=(0,x.TS)(e,{alertIconSizeLG:t,alertPaddingHorizontal:12});return[O(n)]})),S=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};const N={success:r.Z,info:o.Z,error:a.Z,warning:i.Z},B=e=>{const{icon:t,prefixCls:n,type:r}=e,a=N[r]||null;return t?(0,f.wm)(t,p.createElement("span",{className:`${n}-icon`},t),(()=>({className:d()(`${n}-icon`,{[t.props.className]:t.props.className})}))):p.createElement(a,{className:`${n}-icon`})},$=e=>{const{isClosable:t,closeText:n,prefixCls:r,closeIcon:a,handleClose:s}=e;return t?p.createElement("button",{type:"button",onClick:s,className:`${r}-close-icon`,tabIndex:0},n?p.createElement("span",{className:`${r}-close-text`},n):a):null},H=e=>{var{description:t,prefixCls:n,message:r,banner:a,className:i,rootClassName:o,style:c,onMouseEnter:f,onMouseLeave:g,onClick:b,afterClose:y,showIcon:h,closable:v,closeText:q,closeIcon:k=p.createElement(s.Z,null),action:x}=e,A=S(e,["description","prefixCls","message","banner","className","rootClassName","style","onMouseEnter","onMouseLeave","onClick","afterClose","showIcon","closable","closeText","closeIcon","action"]);const[j,C]=p.useState(!1),w=p.useRef(),{getPrefixCls:I,direction:O}=p.useContext(l.E_),N=I("alert",n),[H,_]=E(N),D=e=>{var t;C(!0),null===(t=A.onClose)||void 0===t||t.call(A,e)},T=!!q||v,G=(()=>{const{type:e}=A;return void 0!==e?e:a?"warning":"info"})(),R=!(!a||void 0!==h)||h,K=d()(N,`${N}-${G}`,{[`${N}-with-description`]:!!t,[`${N}-no-icon`]:!R,[`${N}-banner`]:!!a,[`${N}-rtl`]:"rtl"===O},i,o,_),M=(0,m.Z)(A);return H(p.createElement(u.ZP,{visible:!j,motionName:`${N}-motion`,motionAppear:!1,motionEnter:!1,onLeaveStart:e=>({maxHeight:e.offsetHeight}),onLeaveEnd:y},(e=>{let{className:n,style:a}=e;return p.createElement("div",Object.assign({ref:w,"data-show":!j,className:d()(K,n),style:Object.assign(Object.assign({},c),a),onMouseEnter:f,onMouseLeave:g,onClick:b,role:"alert"},M),R?p.createElement(B,{description:t,icon:A.icon,prefixCls:N,type:G}):null,p.createElement("div",{className:`${N}-content`},r?p.createElement("div",{className:`${N}-message`},r):null,t?p.createElement("div",{className:`${N}-description`},t):null),x?p.createElement("div",{className:`${N}-action`},x):null,p.createElement($,{isClosable:!!T,closeText:q,prefixCls:N,closeIcon:k,handleClose:D}))})))};H.ErrorBoundary=q;var _=H},18317:function(e,t,n){"use strict";var r=n(8575),a=r.parse,s=r.Url;function i(e){var t=e.url;if(void 0!==t){var n=e._parsedUrl;return c(t,n)?n:((n=o(t))._raw=t,e._parsedUrl=n)}}function o(e){if("string"!=typeof e||47!==e.charCodeAt(0))return a(e);for(var t=e,n=null,r=null,i=1;i<e.length;i++)switch(e.charCodeAt(i)){case 63:null===r&&(t=e.substring(0,i),n=e.substring(i+1),r=e.substring(i));break;case 9:case 10:case 12:case 13:case 32:case 35:case 160:case 65279:return a(e)}var o=void 0!==s?new s:{};return o.path=e,o.href=e,o.pathname=t,null!==r&&(o.query=n,o.search=r),o}function c(e,t){return"object"==typeof t&&null!==t&&(void 0===s||t instanceof s)&&t._raw===e}e.exports=i,e.exports.original=function(e){var t=e.originalUrl;if("string"!=typeof t)return i(e);var n=e._parsedOriginalUrl;if(c(t,n))return n;return n=o(t),n._raw=t,e._parsedOriginalUrl=n}},24654:function(){}}]);