openapi: 3.0.0

tags:
  - name: Actions

paths:

  fetchBalance:
    post:
      tags:
        - Actions
      description: Action for fetching balance information for Ethereum or ERC-20 tokens.
      requestBody:
        content:
          application/json:
            examples: 
              "address":
                value: {address: '0x4712567f2EAef852a277a83405408459Bb8195af'}
              "chainId":
                value: {address: '0x4712567f2EAef852a277a83405408459Bb8195af', chainId: 17777, }
              "formatUnits":
                value: {address: '0x4712567f2EAef852a277a83405408459Bb8195af', formatUnits: 'gwei', }
              "token":
                value: {address: '0x4712567f2EAef852a277a83405408459Bb8195af', token: '0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0', }
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9a-fA-F]{40}$
                chainId:
                  type: number
                formatUnits:
                  oneOf:
                    - type: string
                      enum: ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"]
                    - type: number
                token:
                  type: string
                  pattern: ^0x[0-9a-fA-F]{40}$    
      responses:
        '200':
          content:
            application/json:
              example: { decimals: 18,  formatted: 424.549441141332252314,  symbol: "EOS",  value: {type: "BigNumber", hex: "0x1703ce9b5bd3b8169a" }}
              schema:
                type: object
                properties:
                  decimals :
                    type: number
                  formatted:
                    type: string
                  symbol: 
                    type: string
                  value:
                    $ref: '#/components/schemas/bigint'

  fetchBlockNumber:
    post:
      tags:
        - Actions
      description: Action for fetching the current block number.
      requestBody:
        content:
          application/json:
            example: {}
            schema:
              type: object
              properties:
                chainId :
                  type: number
      responses:
        '200':
          content:
            application/json:
              example: 100
              schema:
                type: number

  fetchEnsAddress:
    post:
      tags:
        - Actions
      description: Action for fetching address for ENS name.
      requestBody:
        content:
          application/json:
            examples: 
              "name":
                value: {name: 'awkweb.eth'}
              "chainId":
                value: {name: 'awkweb.eth', chainId: 17777, }
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                chainId:
                  type: number 
      responses:
        '200':
          content:
            application/json:
              example: '0x4712567f2EAef852a277a83405408459Bb8195af'
              schema:
                type: string
                pattern: ^0x[0-9a-fA-F]{40}$   

  fetchEnsAvatar:
    post:
      tags:
        - Actions
      description: Action for fetching avatar for ENS name.
      requestBody:
        content:
          application/json:
            examples: 
              "name":
                value: {name: 'awkweb.eth'}
              "chainId":
                value: {name: 'awkweb.eth', chainId: 17777, }
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                chainId:
                  type: number 
      responses:
        '200':
          content:
            application/json:
              example: 'string'
              schema:
                type: string
   
  fetchEnsName:
    post:
      tags:
        - Actions
      description: Action for fetching ENS name for address.
      requestBody:
        content:
          application/json:
            examples: 
              "address":
                value: {address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'}
              "chainId":
                value: {address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e', chainId: 17777, }
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9a-fA-F]{40}$ 
                chainId:
                  type: number 
      responses:
        '200':
          content:
            application/json:
              example: 'awkweb.eth'
              schema:
                type: string

  fetchEnsResolver:
    post:
      tags:
        - Actions
      description: Action for fetching the resolver for ENS name.
      requestBody:
        content:
          application/json:
            examples: 
              "name":
                value: {name: 'awkweb.eth'}
              "chainId":
                value: {name: 'awkweb.eth', chainId: 17777, }
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                chainId:
                  type: number 
      responses:
        '200':
          content:
            application/json:
              example: 'https://*'
              schema:
                type: string

  fetchFeeData:
    post:
      tags:
        - Actions
      description: Action for fetching network fee information.
      requestBody:
        content:
          application/json:
            examples: 
              "chainId":
                value: {chainId: 17777, }
              "formatUnits":
                value: {formatUnits: 'gwei', }
            schema:
              type: object
              properties:
                chainId:
                  type: number
                formatUnits:
                  oneOf:
                    - type: string
                      enum: ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"]
                    - type: number  
      responses:
        '200':
          content:
            application/json:
              example: { "lastBaseFeePerGas": null, "maxFeePerGas": null, "maxPriorityFeePerGas": null, "gasPrice": { "type": "BigNumber", "hex": "0x22ecb25c00" }, "formatted": { "gasPrice": "150000000000", "maxFeePerGas": null, "maxPriorityFeePerGas": null }}
              schema:
                type: object
                properties:
                  gasPrice :
                    $ref: '#/components/schemas/bigint'
                  maxFeePerGas:
                    $ref: '#/components/schemas/bigint'
                  maxPriorityFeePerGas: 
                    $ref: '#/components/schemas/bigint'
                  formatted:
                    type: object
                    properties:
                      gasPrice:
                        type: string
                      maxFeePerGas:
                        type: string
                      maxPriorityFeePerGas:
                        type: string

  fetchTransaction:
    post:
      tags:
        - Actions
      description: Action for fetching transaction by hash.
      requestBody:
        content:
          application/json:
            examples: 
              "hash":
                value: {hash: '0xacb442788a39281a1761776481a3389e56e5c50e7dcde28fd2b90dbc40dcaffc'}
            schema:
              type: object
              required:
                - hash
              properties:
                hash:
                  type: string
                  pattern: ^0x[0-9a-f]{64}$
      responses:
        '200':
          content:
            application/json:
              example: {"hash":"0x18928cca77cc71032449e327b3d6e096361e72e2bc079832364912c7e2245b36","type":0,"accessList":null,"blockHash":"0xaac0f1cb36b21aa1a0867f37f66acf67d0a5691a67de372fc1d13152f29772dc","blockNumber":5214346,"transactionIndex":0,"confirmations":112,"from":"0x0937B96f04bA90420FcD5d168C9Bbe027E171314","gasPrice":{"type":"BigNumber","hex":"0x22ecb25c00"},"gasLimit":{"type":"BigNumber","hex":"0x033450"},"to":"0xCddD4C1D31720593e603E48560279039c35c7c6E","value":{"type":"BigNumber","hex":"0x00"},"nonce":16,"data":"0x4e71d92d","r":"0xeb846570e82a1e978f4fc5e32f5094b39a104120545f98c8ce3231a38b4f5e73","s":"0x78053b9a3eabe9f1cbcc09e1ecacbfde78005f346e23fa5a2c3752b28e0758cd","v":35589,"creates":null,"chainId":17777}
              schema:
                $ref: '#/components/schemas/Transaction'
                
  fetchToken:
    post:
      tags:
        - Actions
      description: Action for fetching ERC-20 token information.
      requestBody:
        content:
          application/json:
            examples: 
              "address":
                value: {"address": "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0"}
              "chainId":
                value: {address: '0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0', chainId: 17777, }
              "formatUnits":
                value: {address: '0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0', formatUnits: 'gwei', }
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9a-fA-F]{40}$
                chainId:
                  type: number
                formatUnits:
                  oneOf:
                    - type: string
                      enum: ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"]
                    - type: number 
      responses:
        '200':
          content:
            application/json:
              example: {"address":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0","decimals":18,"name":"NOAH","symbol":"NOAH","totalSupply":{"formatted":"275662.0","value":{"type":"BigNumber","hex":"0x3a5faabe202102780000"}}}
              schema:
                type: object
                properties:
                  address:
                    type: string
                    pattern: ^0x[0-9,a-f,A-F]{40}$ 
                  decimals :
                    type: number
                  name:
                    type: string
                  totalSupply:
                    type: object
                    properties:  
                      formatted:
                        type: string
                      value:
                        $ref: '#/components/schemas/bigint'

  getAccount:
    post:
      tags:
        - Actions
      description: Action for accessing account data and connection status.
      requestBody:
        content:
          application/json:
            example: {}
            schema:
              type: object
      responses:
        '200':
          content:
            application/json:
              example: {"address":"0x21431733D89101bAb0aD6c1D7ACC94082f3D0487","connector":"Omit","isConnected":true,"isConnecting":false,"isDisconnected":false,"isReconnecting":false,"status":"connected"}
              schema:
                type: object
                properties:
                  address:
                    type: string
                    pattern: ^0x[0-9,a-f,A-F]{40}$ 
                  connector :
                    type: string
                  isConnecting:
                    type: boolean
                  isReconnecting:
                    type: boolean
                  isConnected:
                    type: boolean
                  isDisconnected:
                    type: boolean
                  status:
                    type: string
                    Enum: ["connecting", "reconnecting", "connected", "disconnected"]

  getContract:
    post:
      tags:
        - Actions
      description: Action for creating a type-safe Contract instance.
      requestBody:
        content:
          application/json:
            examples: 
              function: 
                value: {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}]}
              event:
                value: {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"event","name":"Approval","inputs":[{"indexed":true,"name":"owner","type":"address",},{"indexed":true,"name":"spender","type":"address",},{"indexed":false,"name":"value","type":"uint256",}],}]}
            schema:
              type: object
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9,a-f,A-F]{40}$ 
                abi:
                  type: string
                signerOrProvider:
                  type: string
                  example: "Omit"
      responses:
        '200':
          content:
            application/json:
              example: {"interface":{"fragments":[{"type":"function","name":"balanceOf","constant":true,"inputs":[{"name":"account","type":"address","indexed":null,"components":null,"arrayLength":null,"arrayChildren":null,"baseType":"address","_isParamType":true}],"outputs":[{"name":null,"type":"uint256","indexed":null,"components":null,"arrayLength":null,"arrayChildren":null,"baseType":"uint256","_isParamType":true}],"payable":false,"stateMutability":"view","gas":null,"_isFragment":true}],"_abiCoder":{"coerceFunc":null},"functions":{"balanceOf(address)":{"type":"function","name":"balanceOf","constant":true,"inputs":[{"name":"account","type":"address","indexed":null,"components":null,"arrayLength":null,"arrayChildren":null,"baseType":"address","_isParamType":true}],"outputs":[{"name":null,"type":"uint256","indexed":null,"components":null,"arrayLength":null,"arrayChildren":null,"baseType":"uint256","_isParamType":true}],"payable":false,"stateMutability":"view","gas":null,"_isFragment":true}},"errors":{},"events":{},"structs":{},"deploy":{"name":null,"type":"constructor","inputs":[],"payable":false,"stateMutability":"nonpayable","gas":null,"_isFragment":true},"_isInterface":true},"provider":null,"signer":null,"callStatic":{},"estimateGas":{},"functions":{},"populateTransaction":{},"filters":{},"_runningEvents":{},"_wrappedEmits":{},"address":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0","resolvedAddress":{}}

  getNetwork:
    post:
      tags:
        - Actions
      description: Action for accessing network data, such as current connected chain and connector chains.
      requestBody:
        content:
          application/json:
            example: {}
            schema:
              type: object

      responses:
        '200':
          content:
            application/json:
              example: {"chain":{"id":17777,"name":"EOS EVM","network":"eosevm","nativeCurrency":{"decimals":18,"name":"EOS","symbol":"EOS"},"rpcUrls":{"public":{"http":["https://api.evm.eosnetwork.com"]},"default":{"http":["https://api.evm.eosnetwork.com"]}},"blockExplorers":{"etherscan":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"},"default":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"}},"contracts":{"multicall3":{"address":"0x177c242C37A5b22ED344EC0fA978C9996D8B7C7b"}},"unsupported":false},"chains":[{"id":17777,"name":"EOS EVM","network":"eosevm","nativeCurrency":{"decimals":18,"name":"EOS","symbol":"EOS"},"rpcUrls":{"public":{"http":["https://api.evm.eosnetwork.com"]},"default":{"http":["https://api.evm.eosnetwork.com"]}},"blockExplorers":{"etherscan":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"},"default":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"}},"contracts":{"multicall3":{"address":"0x177c242C37A5b22ED344EC0fA978C9996D8B7C7b"}},},{"id":15557,"name":"EOS EVM Testnet","network":"eosevm-testnet","nativeCurrency":{"decimals":18,"name":"EOS","symbol":"EOS"},"rpcUrls":{"public":{"http":["https://api.testnet.evm.eosnetwork.com"]},"default":{"http":["https://api.testnet.evm.eosnetwork.com"]}},"blockExplorers":{"etherscan":{"name":"EOS EVM Explorer","url":"https://explorer.testnet.evm.eosnetwork.com"},"default":{"name":"EOS EVM Explorer","url":"https://explorer.testnet.evm.eosnetwork.com"}}}]}
              schema:
                type: object

  getProvider:
    post:
      tags:
        - Actions
      description: Action for accessing Client's ethers Provider.
      requestBody:
        content:
          application/json:
            examples:
              null:
                value: {}
              chainId:
                value: {chainId: 17777}
            schema:
              type: object
              properties:
                chainId:
                  type: number

      responses:
        '200':
          content:
            application/json:
              example: Provider Object
              schema:
                type: object

  getWebSocketProvider:
    post:
      tags:
        - Actions
      description: Action for accessing the Client's ethers WebSocket Provider.
      requestBody:
        content:
          application/json:
            examples:
              null:
                value: {}
              chainId:
                value: {chainId: 17777}
            schema:
              type: object
              properties:
                chainId:
                  type: number

      responses:
        '200':
          content:
            application/json:
              example: WebSocketProvider Object
              schema:
                type: object

  multicall:
    post:
      tags:
        - Actions
      description: Action for calling multiple ethers Contract read-only methods via multicall3.
      requestBody:
        content:
          application/json:
            examples: 
              contracts: 
                value: {"contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
              chainId :
                value: {"contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d'], chainId: 17777}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa'], chainId: 17777}]}
              allowFailure : 
                value: {"allowFailure": false, "contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
              overrides  :
                value: {"overrides": { from: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e' }, "contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
            schema:
              type: object
              required:
                - contracts
              properties:
                contracts:
                  type: object
                  required:
                    - address
                    - abi
                    - functionName
                  properties:
                    address:
                      type: string
                      pattern: ^0x[0-9,a-f,A-F]{40}$ 
                    abi:
                      type: object
                    functionName:
                      type: string
                    args:
                      type: array
                      items:
                        oneOf:
                          - type: number
                          - type: string
                          - type: object
                    chainId:
                      type: number
                allowFailure:
                  type: boolean
                overrides:
                  type: object
      responses:
        '200':
          content:
            application/json:
              example: [{"type":"BigNumber","hex":"0x020755350afc12300000"},{"type":"BigNumber","hex":"0x030ccd327b787dec0c98"}]
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bigint'

  prepareSendTransaction:
    post:
      tags:
        - Actions
      description: Action for preparing a transaction to be sent via sendTransaction.
      requestBody:
        content:
          application/json:
            examples: 
              request: 
                value: {"request": {"to": "0xA0Cf798816D4b9b9866b5330EEa46a18382f251e", "value": "0x10000"}}
              chainId :
                value: {"chainId": 17777, "request": {"to": "0xA0Cf798816D4b9b9866b5330EEa46a18382f251e", "value": "0x10000"}}
            schema:
              type: object
              required:
                - request
              properties:
                request:
                  type: object
                  properties:
                    to:
                      type: string
                      pattern: ^0x[0-9,a-f,A-F]{40}$ 
                    value:
                      type: number
                chainId:
                  type: number
      responses:
        '200':
          content:
            application/json:
              example: {"request":{"to":"0xA0Cf798816D4b9b9866b5330EEa46a18382f251e","value":"0x10000","gasLimit":{"type":"BigNumber","hex":"0x5208"}},"mode":"prepared"}
              schema:
                type: object
                properties:
                  mode:
                    type: string
                  request:
                    type: object

  prepareWriteContract:
    post:
      tags:
        - Actions
      description: Action for preparing a contract write to be sent via writeContract.
      requestBody:
        content:
          application/json:
            examples: 
              base: 
                value: {"address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
              chainId :
                value: {"chainId": 17777, "address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
              allowFailure : 
                value: {"allowFailure": false, "address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
              overrides  :
                value: {"overrides": {"from": '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'},"abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
            schema:
              type: object
              required:
                - address
                - abi
                - functionName
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9,a-f,A-F]{40}$ 
                abi:
                  type: object
                functionName:
                  type: string
                args:
                  type: array
                  items:
                    oneOf:
                      - type: number
                      - type: string
                      - type: object
                chainId:
                  type: number
                allowFailure:
                  type: boolean
                overrides:
                  type: object
      responses:
        '200':
          content:
            application/json:
              example: {"abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[]}],"address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","functionName":"mint","mode":"prepared","request":{"data":"0xa71bbebe0000000000000000000000000000000000000000000000000000000000000045","to":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","from":"0x21431733D89101bAb0aD6c1D7ACC94082f3D0487","gasLimit":{"type":"BigNumber","hex":"0x52d4"}}}
              schema:
                type: object

  readContract:
    post:
      tags:
        - Actions
      description: Action for calling an ethers Contract read-only method.
      requestBody:
        content:
          application/json:
            examples: 
              base: 
                value: {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}
              chainId :
                value: {"chainId": 17777, address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}
              allowFailure : 
                value: {"allowFailure": false, address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}
              overrides  :
                value: {"overrides": {"from": '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'},address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}
            schema:
              type: object
              required:
                - address
                - abi
                - functionName
              properties:
                address:
                  type: string
                  pattern: ^0x[0-9,a-f,A-F]{40}$ 
                abi:
                  type: object
                functionName:
                  type: string
                args:
                  type: array
                  items:
                    oneOf:
                      - type: number
                      - type: string
                      - type: object
                chainId:
                  type: number
                allowFailure:
                  type: boolean
                overrides:
                  type: object
      responses:
        '200':
          content:
            application/json:
              example: {"type":"BigNumber","hex":"0x020755350afc12300000"}
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/bigint'

  readContracts:
    post:
      tags:
        - Actions
      description: Action for calling multiple ethers Contract read-only methods.
      requestBody:
        content:
          application/json:
            examples: 
              contracts: 
                value: {"contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
              chainId :
                value: {"contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d'], chainId: 17777}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa'], chainId: 17777}]}
              allowFailure : 
                value: {"allowFailure": false, "contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
              overrides  :
                value: {"overrides": { from: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e' }, "contracts": [{address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0x3E2277bD9bBA5fB227C1b6CD87794B7e26F88F8d']}, {address: "0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0", abi: [{"type":"function","name":"balanceOf","stateMutability":"view","inputs":[{"name":"account","type":"address"}],"outputs":[{"name":"","type":"uint256"}]}], functionName: 'balanceOf', args: ['0xBae4469d54d1F6D95621672E820Ebf4e2288CCEa']}]}
            schema:
              type: object
              required:
                - contracts
              properties:
                contracts:
                  type: object
                  required:
                    - address
                    - abi
                    - functionName
                  properties:
                    address:
                      type: string
                      pattern: ^0x[0-9,a-f,A-F]{40}$ 
                    abi:
                      type: object
                    functionName:
                      type: string
                    args:
                      type: array
                      items:
                        oneOf:
                          - type: number
                          - type: string
                          - type: object
                    chainId:
                      type: number
                allowFailure:
                  type: boolean
                overrides:
                  type: object
      responses:
        '200':
          content:
            application/json:
              example: [{"type":"BigNumber","hex":"0x020755350afc12300000"},{"type":"BigNumber","hex":"0x030ccd327b787dec0c98"}]

  sendTransaction:
    post:
      tags:
        - Actions
      description: Action for sending a transaction.
      requestBody:
        content:
          application/json:
            example: {"mode": "recklesslyUnprepared", "request": {"to": "0xA0Cf798816D4b9b9866b5330EEa46a18382f251e", "value": "0x10000"}}
            schema:
              type: object
              required:
                - mode
                - request
              properties:
                mode:
                  type: string
                request:
                  type: object
                  properties:
                    to:
                      type: string
                      pattern: ^0x[0-9,a-f,A-F]{40}$ 
                    value:
                      type: number
                chainId:
                  type: number
      responses:
        '200':
          content:
            application/json:
              example: {"hash": "0x3cbe670e13718c55c927f303b51f857bab96d20637a9e6e570ecdcf2df88b71d"}
              schema:
                type: object
                properties:
                  hash:
                    type: string
                  wait:
                    type: function

  signMessage:
    post:
      tags:
        - Actions
      description: Action for signing messages with connected account.
      requestBody:
        content:
          application/json:
            example: {"message": "Hello World"}
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
      responses:
        '200':
          content:
            application/json:
              example: "0x61d2239105369d5a15333c8aa6c3659427584bd409b1e853b2f659c400023d8c4a16f78e69b18a63bfdb5196cf720d56e22cd391f7ef5d6576f291620512953b1c"
              schema:
                type: string

  signTypedData:
    post:
      tags:
        - Actions
      description: Action for signing typed data with connected account.
      requestBody:
        content:
          application/json:
            example: {"domain":{"name":"Ether Mail","version":"1","chainId":15557,"verifyingContract":"0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC",},"types":{"Person":[{"name":"name","type":"string"},{"name":"wallet","type":"address"},],"Mail":[{"name":'from',"type":'Person'},{"name":'to',"type":'Person'},{"name":'contents',"type":'string'},],},"value":{"from":{"name":'Cow',"wallet":'0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',},"to":{"name":'Bob',"wallet":'0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',},"contents":'Hello, Bob!',}}
            schema:
              type: object
              required:
                - domain
                - types
                - value
              properties:
                domain:
                  type: object
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                    chainId: 
                      type: number
                    verifyingContract:
                      type: string
                types:
                  type: object
                value:
                  type: object
                  properties:
                    from:
                      type: object
                      properties:
                        name:
                          type: string
                        wallet:
                          type: string
                    to:
                      type: object
                      properties:
                        name:
                          type: string
                        wallet:
                          type: string
                    contents:
                      type: string                        
      responses:
        '200':
          content:
            application/json:
              example: "0x49723973fd880e59644d02ad354500465b67fd400d2b8163a77369f2ff47896321eab0f2814a3afb59b51ea350d117503c919e9a6a9ffd44e45774166a2ddbaa1b"
              schema:
                type: string

  switchNetwork:
    post:
      tags:
        - Actions
      description: Action for switching networks with a connector.
      requestBody:
        content:
          application/json:
            example: {chainId: 17777}
            schema:
              type: object
              required:
                - chainId
              properties:
                chainId: 
                  type: number
                   
      responses:
        '200':
          content:
            application/json:
              example: {"id":17777,"name":"EOS EVM","network":"eosevm","nativeCurrency":{"decimals":18,"name":"EOS","symbol":"EOS"},"rpcUrls":{"public":{"http":["https://api.evm.eosnetwork.com"]},"default":{"http":["https://api.evm.eosnetwork.com"]}},"blockExplorers":{"etherscan":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"},"default":{"name":"EOS EVM Explorer","url":"https://explorer.evm.eosnetwork.com"}},"contracts":{"multicall3":{"address":"0x177c242C37A5b22ED344EC0fA978C9996D8B7C7b"}}}
              schema:
                type: object

  waitForTransaction:
    post:
      tags:
        - Actions
      description: Action for declaratively waiting until transaction is processed. Pairs well with writeContract and sendTransaction.
      requestBody:
        content:
          application/json:
            examples:
              hash:
                value: {hash: '0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975'}
              chainId:
                value: {chainId: 17777, hash: '0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975'}
              confirmations:
                value: {confirmations: 3, hash: '0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975'}
              timeout:
                value: {timeout: 3000, hash: '0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975'}
            schema:
              type: object
              required:
                - hash
              properties:
                hash: 
                  type: string
                chainId:
                  type: number
                confirmations:
                  type: number
                timeout:
                  type: number
                         
      responses:
        '200':
          content:
            application/json:
              example: {"to":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0","from":"0xdC152d02857bc5Df578d3Cc6259b3aC096B8cE11","contractAddress":null,"transactionIndex":0,"gasUsed":{"type":"BigNumber","hex":"0xaca9"},"logsBloom":"0xblockHash":"0x8642de1398d4d19ffd3d4055cf9be186e0d6e85cc45a79fa12695e822cbdba79","transactionHash":"0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975","logs":[{"transactionIndex":0,"blockNumber":5303574,"transactionHash":"0x1b964e61bd8cf281d3866c2941621b62e25d3e2a00c569653521fd27ded15975","address":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x000000000000000000000000dc152d02857bc5df578d3cc6259b3ac096b8ce11","0x0000000000000000000000001c8f68e8adbd75c23281e5c88e44d0b7023a4238"],"data":"0x00000000000000000000000000000000000000000000000053444835ec580000","logIndex":0,"blockHash":"0x8642de1398d4d19ffd3d4055cf9be186e0d6e85cc45a79fa12695e822cbdba79"}],"blockNumber":5303574,"confirmations":41,"cumulativeGasUsed":{"type":"BigNumber","hex":"0xaca9"},"effectiveGasPrice":{"type":"BigNumber","hex":"0x22ecb25c00"},"status":1,"type":0,"byzantium":true}
              schema:
                type: object

  writeContract:
    post:
      tags:
        - Actions
      description: Action for calling a Contract write method.
      requestBody:
        content:
          application/json:
            examples: 
              base: 
                value: {"mode": "recklesslyUnprepared", "address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
              chainId :
                value: {"mode": "recklesslyUnprepared", "chainId": 17777, "address":"0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2","abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
              overrides  :
                value: {"mode": "recklesslyUnprepared", "overrides": {"from": '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'},"abi":[{"name":"mint","type":"function","stateMutability":"nonpayable","inputs":[{"internalType":"uint32","name":"tokenId","type":"uint32"}],"outputs":[],},],"functionName":'mint',"args":[69],}
            schema:
              type: object
              required:
                - mode
                - address
                - abi
                - functionName
              properties:
                mode:
                  type: string
                  pattern: recklesslyUnprepared
                address:
                  type: string
                  pattern: ^0x[0-9,a-f,A-F]{40}$ 
                abi:
                  type: object
                functionName:
                  type: string
                args:
                  type: array
                  items:
                    oneOf:
                      - type: number
                      - type: string
                      - type: object
                chainId:
                  type: number
                overrides:
                  type: object
      responses:
        '200':
          content:
            application/json:
              example: {"hash": "0x3cbe670e13718c55c927f303b51f857bab96d20637a9e6e570ecdcf2df88b71d"}
              schema:
                type: object

components:
  schemas:
    bigint:
      title: bigint
      type: object
      properties:
        type:
          type: string
        hex:
          type: string
          pattern: ^0x([0-9a-f]){2,}$

    Transaction:
      title: Transaction
      type: object
      properties:
        hash:
          type: string
          pattern: ^0x[0-9a-f]{64}$
        type:
          type: number
        accessList:
          type: array
          items:
            type: object
            properties:
              address: 
                type: string
                pattern: ^0x[0-9,a-f,A-F]{40}$ 
              storageKeys: 
                type: array
                items:
                  type: string
        blockHash:
          type: string
          pattern: ^0x[0-9a-f]{64}$
        blockNumber: 
          type: number
        transactionIndex:
          type: number
        confirmations:
          type: number
        from:
          type: string
          pattern: ^0x[0-9,a-f,A-F]{40}$ 
        gasPrice:
          $ref: '#/components/schemas/bigint'
        gasLimit:
          $ref: '#/components/schemas/bigint'
        to:
          type: string
          pattern: ^0x[0-9,a-f,A-F]{40}$ 
        value: 
          $ref: '#/components/schemas/bigint'
        nonce:
          type: number
          pattern: ^0x[0-9a-fA-F]+$ 
        data:
          type: string
        r:
          type: string
        s:
          type: string
        v:
          type: number
        creates:
          type: string
        chainId:
          type: number








