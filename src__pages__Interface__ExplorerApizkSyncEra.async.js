(self.webpackChunk=self.webpackChunk||[]).push([[7482,743,1727,5e3],{87671:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return m}});var a=n(87659),s=n(38345),r=n(54442),i=n(99138),o=n(18317),c=n.n(o),d=n(63242),u=(n(15807),JSON.parse('{"openapi":"3.0.0","tags":[{"name":"Account","description":"?module=account"},{"name":"Logs","description":"?module=logs"},{"name":"Token","description":"?module=token"},{"name":"Stats","description":"?module=stats"},{"name":"Block","description":"?module=block"},{"name":"Contract","description":"?module=contract"},{"name":"Transaction","description":"?module=transaction"},{"name":"ApiUrl","description":"https://zksync2-mainnet-explorer.zksync.io"},{"name":"ApiUrlV2","description":"https://block-explorer-api.mainnet.zksync.io"}],"paths":{"/eth_get_balance":{"get":{"tags":["Account"],"summary":"?module=account&action=eth_get_balance&address={addressHash}","description":"Mimics Ethereum JSON RPC\'s eth_getBalance. Returns the balance as of the provided block (defaults to latest)","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"eth_get_balance"},{"name":"address","in":"query","description":"The address of the account.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8"},{"name":"block","in":"query","description":"Either the block number as a string, or one of latest, earliest or pending latest will be the latest balance in a *consensus* block. earliest will be the first recorded balance for the address. pending will be the latest balance in consensus *or* nonconsensus blocks.","required":false,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"id":{"type":"integer"},"jsonrpc":{"type":"string"},"result":{"type":"string"}}},"example":{"jsonrpc":"2.0","result":"0x0234c8a3397aab58","id":0}}}}}}},"/balance":{"get":{"tags":["Account"],"summary":"?module=account&action=balance&address={addressHash}","description":"Get balance for address. Also available through a GraphQL \'addresses\' query. If the balance hasn\'t been updated in a long time, we will double check with the node to fetch the absolute latest balance. This will not be reflected in the current request, but once it is updated, subsequent requests will show the updated balance. If you want to know whether or not we are checking for another balance, use the `balancemulti` action. That contains a property called `stale` that will let you know to recheck that balance in the near future.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"balance"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"string"},"status":{"type":"string"}}},"example":{"message":"OK","result":"8849151068756007981","status":"1"}}}}}}},"/balancemulti":{"get":{"tags":["Account"],"summary":"?module=account&action=balancemulti&address={addressHash1,addressHash2,addressHash3}","description":"Get balance for multiple addresses. Also available through a GraphQL \'addresses\' query. If the balance hasn\'t been updated in a long time, we will double check with the node to fetch the absolute latest balance. This will not be reflected in the current request, but once it is updated, subsequent requests will show the updated balance. You can know that this is taking place via the `stale` attribute, which is set to `true` if a new balance is being fetched.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"balancemulti"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts. Separate addresses by comma. Maximum of 20 addresses.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8,0xa0Df0cbAE6ef2078EC0f585Db40a5aFffEF8F3Ea"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"account":"0xa31b0412a192943b2e6c5edca2670211cc7a8fe8","balance":"8035912637762766686","stale":false},{"account":"0xa0df0cbae6ef2078ec0f585db40a5afffef8f3ea","balance":"10701970636547593081","stale":false}],"status":"1"}}}}}}},"/pendingtxlist":{"get":{"tags":["Account"],"summary":"?module=account&action=pendingtxlist&address={addressHash}","description":"Get pending transactions by address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"pendingtxlist"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"contractAddress":"","cumulativeGasUsed":"122207","from":"0x3fb1cd2cd96c6d5c0b5eb3322d807b34482481d4","gas":"122261","gasPrice":"50000000000","gasUsed":"122207","hash":"0x98beb27135aa0a25650557005ad962919d6a278c4b3dde7f4f6a3a1e65aa746c","input":"0xf00d4b5d000000000000000000000000036c8cecce8d8bbf0831d840d7f29c9e3ddefa63000000000000000000000000c5a96db085dda36ffbe390f455315d30d6d3dc52","nonce":"0","to":"0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae","value":"0"}],"status":"1"}}}}}}},"/txlist":{"get":{"tags":["Account"],"summary":"?module=account&action=txlist&address={addressHash}","description":"Get transactions by address. Up to a maximum of 10,000 transactions. Also available through a GraphQL \'address\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"txlist"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0x1f1F2BF8942861E6194FDa1c0A9f13921c0Cf117"},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to descending order. Available values: asc, desc","required":false,"schema":{"type":"string"},"default":""},{"name":"start_block","in":"query","description":"A nonnegative integer that represents the starting block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"end_block","in":"query","description":"A nonnegative integer that represents the ending block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"filter_by","in":"query","description":"A string representing the field to filter by. If none is given it returns transactions that match to, from, or contract address. Available values: to, from","required":false,"schema":{"type":"string"},"default":""},{"name":"start_timestamp","in":"query","description":"Represents the starting block timestamp.","required":false,"schema":{"type":"integer"},"default":""},{"name":"end_timestamp","in":"query","description":"Represents the ending block timestamp.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockHash":"0x373d339e45a701447367d7b9c7cef84aab79c2b2714271b908cda0ab3ad0849b","blockNumber":"65204","confirmations":"5994246","contractAddress":"","cumulativeGasUsed":"122207","from":"0x3fb1cd2cd96c6d5c0b5eb3322d807b34482481d4","gas":"122261","gasPrice":"50000000000","gasUsed":"122207","hash":"0x98beb27135aa0a25650557005ad962919d6a278c4b3dde7f4f6a3a1e65aa746c","input":"0xf00d4b5d000000000000000000000000036c8cecce8d8bbf0831d840d7f29c9e3ddefa63000000000000000000000000c5a96db085dda36ffbe390f455315d30d6d3dc52","isError":"0","nonce":"0","timeStamp":"1439232889","to":"0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae","transactionIndex":"0","txreceipt_status":"1","value":"0"}],"status":"1"}}}}}}},"/txlistinternal":{"get":{"tags":["Account"],"summary":"?module=account&action=txlistinternal&txhash={transactionHash}","description":"Get internal transactions by transaction or address hash. Up to a maximum of 10,000 internal transactions. Also available through a GraphQL \'transaction\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"txlistinternal"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction. A transaction hash or address hash is required.","required":true,"schema":{"type":"string"},"default":"0x0c382759b675810b83711a55532002b4b33affe2b3fde13084ea1d9cc080428b"},{"name":"address","in":"query","description":"A 160-bit code used for identifying accounts. An address hash or transaction hash is required.","required":false,"schema":{"type":"string"},"default":""},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to ascending order. Available values: asc, desc. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"string"},"default":""},{"name":"start_block","in":"query","description":"A nonnegative integer that represents the starting block number. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"end_block","in":"query","description":"A nonnegative integer that represents the ending block number. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction. WARNING: Only available if \'address\' is provided.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockNumber":"6153702","callType":"delegatecall","contractAddress":"0x883103875d905c11f9ac7dacbfc16deb39655361","errCode":"","from":"0x2ca1e3f250f56f1761b9a52bc42db53986085eff","gas":"814937","gasUsed":"536262","index":"0","input":"","isError":"0","timeStamp":"1534362606","to":"","transactionHash":"0xd65b788c610949704a5f9aac2228c7c777434dfe11c863a12306f57fcbd8cdbb","type":"call","value":"5488334153118633"}],"status":"1"}}}}}}},"/tokentx":{"get":{"tags":["Account"],"summary":"?module=account&action=tokentx&address={addressHash}","description":"Get token transfer events by address. Up to a maximum of 10,000 token transfer events. Also available through a GraphQL \'token_transfers\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokentx"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0x1f1F2BF8942861E6194FDa1c0A9f13921c0Cf117"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":false,"schema":{"type":"string"},"default":""},{"name":"sort","in":"query","description":"A string representing the order by block number direction. Defaults to descending order. Available values: asc, desc","required":false,"schema":{"type":"string"},"default":""},{"name":"start_block","in":"query","description":"A nonnegative integer that represents the starting block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"end_block","in":"query","description":"A nonnegative integer that represents the ending block number.","required":false,"schema":{"type":"integer"},"default":""},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockHash":"0x6169c5dc05d0051564ba3eae8ebfbdefda640c5f5ffc095846b8aed0b44f64ea","blockNumber":"5997843","confirmations":"199384","contractAddress":"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2","cumulativeGasUsed":"1043649","from":"0x4e83362442b8d1bec281594cea3050c8eb01311c","gas":"44758","gasPrice":"7000000000","gasUsed":"37298","hash":"0xd65b788c610949704a5f9aac2228c7c777434dfe11c863a12306f57fcbd8cdbb","input":"0xa9059cbb00000000000000000000000021e21ba085289f81a86921de890eed30f1ad23750000000000000000000000000000000000000000000000008ac7230489e80000","logIndex":"0","nonce":"765","timeStamp":"1532086946","to":"0x21e21ba085289f81a86921de890eed30f1ad2375","tokenDecimal":"18","tokenName":"Maker","tokenSymbol":"MKR","transactionIndex":"27","value":"10000000000000000000"}],"status":"1"}}}}}}},"/tokenbalance":{"get":{"tags":["Account"],"summary":"?module=account&action=tokenbalance&contractaddress={contractAddressHash}&address={addressHash}","description":"Get token account balance for token contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokenbalance"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x765277EebeCA2e31912C9946eAe1021199B39C61"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xC89a761d1A596e41D8FFfe2A79cDA93CF6dCe028"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"4664287755","status":"1"}}}}}}},"/tokenlist":{"get":{"tags":["Account"],"summary":"?module=account&action=tokenlist&address={addressHash}","description":"Get list of tokens owned by address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokenlist"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xC89a761d1A596e41D8FFfe2A79cDA93CF6dCe028"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"balance":"4664287755","contractAddress":"0x765277eebeca2e31912c9946eae1021199b39c61","decimals":"6","name":"USD Coin","symbol":"USDC","type":"ERC-20"},{"balance":"609700000000000000000","contractAddress":"0xc00592aa41d32d137dc480d9f6d0df19b860104f","decimals":"18","name":"Wrapped EOS","symbol":"WEOS","type":"ERC-20"}],"status":"1"}}}}}}},"/getminedblocks":{"get":{"tags":["Account"],"summary":"?module=account&action=getminedblocks&address={addressHash}","description":"Get list of blocks mined by address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getminedblocks"},{"name":"address","in":"query","description":"A 160-bit code used for identifying Accounts.","required":true,"schema":{"type":"string"},"default":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"blockNumber":"3462296","blockReward":"5194770940000000000","timeStamp":"1491118514"}],"status":"1"}}}}}}},"/listaccounts":{"get":{"tags":["Account"],"summary":"?module=account&action=listaccounts","description":"Get a list of accounts and their balances, sorted ascending by the time they were first seen by the explorer.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"account"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"listaccounts"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"address":"0xA31B0412a192943b2E6C5eDcA2670211cc7a8FE8","balance":"135499"}],"status":"1"}}}}}}},"/getLogs":{"get":{"tags":["Logs"],"summary":"?module=logs&action=getLogs&fromBlock={blockNumber}&toBlock={blockNumber}&address={addressHash}&topic0={firstTopic}","description":"Get event logs for an address and/or topics. Up to a maximum of 1,000 event logs.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"logs"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getLogs"},{"name":"fromBlock","in":"query","description":"A nonnegative integer that represents the starting block number. The use of \'latest\' is also supported.","required":true,"schema":{"type":"integer"},"default":"0"},{"name":"toBlock","in":"query","description":"A nonnegative integer that represents the ending block number. The use of \'latest\' is also supported.","required":true,"schema":{"type":"integer"},"default":"6867204"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts. An address and/or topic{x} is required.","required":true,"schema":{"type":"string"},"default":"0x33990122638b9132ca29c723bdf037f1a891a70c"},{"name":"topic0","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":true,"schema":{"type":"string"},"default":"0xf63780e752c6a54a94fc52715dbc5518a3b4c3c2833d301a204226548a2a8545"},{"name":"topic1","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":"0x72657075746174696f6e00000000000000000000000000000000000000000000"},{"name":"topic2","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":"0x000000000000000000000000d9b2f59f3b5c7b3c67047d2f03c3e8052470be92"},{"name":"topic3","in":"query","description":"A string equal to the first topic. A topic{x} and/or address is required.","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_1_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic1. Required if topic0 and topic1 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_2_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic2. Required if topic0 and topic2 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic0_3_opr","in":"query","description":"A string representing the and|or operator for topic0 and topic3. Required if topic0 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic1_2_opr","in":"query","description":"A string representing the and|or operator for topic1 and topic2. Required if topic1 and topic2 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic1_3_opr","in":"query","description":"A string representing the and|or operator for topic1 and topic3. Required if topic1 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""},{"name":"topic2_3_opr","in":"query","description":"A string representing the and|or operator for topic2 and topic3. Required if topic2 and topic3 is used. Available values: and, or","required":false,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"address":"0x33990122638b9132ca29c723bdf037f1a891a70c","blockNumber":"0x5c958","data":"0x","gasPrice":"0xba43b7400","gasUsed":"0x10682","logIndex":"0x","timeStamp":"0x561d688c","topics":["0xf63780e752c6a54a94fc52715dbc5518a3b4c3c2833d301a204226548a2a8545","0x72657075746174696f6e00000000000000000000000000000000000000000000","0x000000000000000000000000d9b2f59f3b5c7b3c67047d2f03c3e8052470be92"],"transactionHash":"0x0b03498648ae2da924f961dda00dc6bb0a8df15519262b7e012b7d67f4bb7e83","transactionIndex":"0x"}],"status":"1"}}}}}}},"/getToken":{"get":{"tags":["Token"],"summary":"?module=token&action=getToken&contractaddress={contractAddressHash}","description":"Get ERC-20 or ERC-721 token by contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"token"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getToken"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"cataloged":true,"contractAddress":"0x2a3b2d64960036de519dc4a45cafd532bfa99ff0","decimals":"18","name":"NOAH","symbol":"NOAH","totalSupply":"281494000000000000000000","type":"ERC-20"},"status":"1"}}}}}}},"/getTokenHolders":{"get":{"tags":["Token"],"summary":"?module=token&action=getTokenHolders&contractaddress={contractAddressHash}","description":"Get token holders by contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"token"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getTokenHolders"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"address":"0x0000000000000000000000000000000000000000","value":"965208500001258757122850"}],"status":"1"}}}}}}},"/tokensupply":{"get":{"tags":["Stats"],"summary":"?module=stats&action=tokensupply&contractaddress={contractAddressHash}","description":"Get ERC-20 or ERC-721 token total supply by contract address.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"tokensupply"},{"name":"contractaddress","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0x2a3b2d64960036de519dC4a45CAfd532Bfa99Ff0"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"281494000000000000000000","status":"1"}}}}}}},"/ethsupplyexchange":{"get":{"tags":["Stats"],"summary":"?module=stats&action=ethsupplyexchange","description":"Get total supply in Wei from exchange.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"ethsupplyexchange"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"0","status":"1"}}}}}}},"/ethsupply":{"get":{"tags":["Stats"],"summary":"?module=stats&action=ethsupply","description":"Get total supply in Wei from DB.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"ethsupply"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"2878078839451014303285383","status":"1"}}}}}}},"/coinsupply":{"get":{"tags":["Stats"],"summary":"?module=stats&action=coinsupply","description":"Get total coin supply from DB minus burnt number.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"coinsupply"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":"2878078.6186943143"}}}}}},"/coinprice":{"get":{"tags":["Stats"],"summary":"?module=stats&action=coinprice","description":"Get latest price of native coin in USD and BTC.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"coinprice"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"coin_btc":"0.03246","coin_btc_timestamp":"1537212510","coin_usd":"204","coin_usd_timestamp":"1537212513"},"status":"1"}}}}}}},"/totalfees":{"get":{"tags":["Stats"],"summary":"?module=stats&action=totalfees&date={date}","description":"Gets total transaction fees in Wei are paid by users to validators per day.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"stats"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"totalfees"},{"name":"date","in":"query","description":"day in ISO 8601 format (yyyy-mm-dd)","required":true,"schema":{"type":"string"},"default":"2023-06-22"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"28381258059429698835","status":"1"}}}}}}},"/getblockreward":{"get":{"tags":["Block"],"summary":"?module=block&action=getblockreward&blockno={blockNumber}","description":"Get block reward by block number.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getblockreward"},{"name":"blockno","in":"query","description":"A nonnegative integer that represents the block number.","required":true,"schema":{"type":"integer"},"default":"1000"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"blockMiner":"0xbbbbbbbbbbbbbbbbbbbbbbbb5530ea015b900000","blockNumber":"1000","blockReward":"0","timeStamp":1680662089,"uncleInclusionReward":null,"uncles":null},"status":"1"}}}}}}},"/getblocknobytime":{"get":{"tags":["Block"],"summary":"?module=block&action=getblocknobytimestamp={blockTimestamp}&closest={before/after}","description":"Get Block Number by Timestamp.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getblocknobytime"},{"name":"timestamp","in":"query","description":"A nonnegative integer that represents the block timestamp (Unix timestamp in seconds).","required":true,"schema":{"type":"integer"},"default":"1680662089"},{"name":"closest","in":"query","description":"Direction to find the closest block number to given timestamp. Available values: before/after.","required":true,"schema":{"type":"string"},"default":"before"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"blockNumber":"1000"},"status":"1"}}}}}}},"/eth_block_number":{"get":{"tags":["Block"],"summary":"?module=block&action=eth_block_number","description":"Mimics Ethereum JSON RPC\'s eth_blockNumber. Returns the latest block number","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"block"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"eth_block_number"},{"name":"id","in":"query","description":"A nonnegative integer that represents the json rpc request id..","required":false,"schema":{"type":"integer"},"default":"1000"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"jsonrpc":"2.0","result":"0x68e8e2","id":1000}}}}}}},"/listcontracts":{"get":{"tags":["Contract"],"summary":"?module=contract&action=listcontracts","description":"Get a list of contracts, sorted ascending by the time they were first seen by the explorer. If you provide the filters `not_decompiled`(`4`) or `not_verified(4)` the results will not be sorted for performance reasons.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"listcontracts"},{"name":"page","in":"query","description":"A nonnegative integer that represents the page number to be used for pagination. \'offset\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"offset","in":"query","description":"A nonnegative integer that represents the maximum number of records to return when paginating. \'page\' must be provided in conjunction.","required":false,"schema":{"type":"integer"},"default":""},{"name":"filter","in":"query","description":"verified|decompiled|unverified|not_decompiled|empty, or 1|2|3|4|5 respectively. This requests only contracts with that status.","required":false,"schema":{"type":"string"},"default":""},{"name":"not_decompiled_with_version","in":"query","description":"Ensures that none of the returned contracts were decompiled with the provided version. Ignored unless filtering for decompiled contracts.","required":false,"schema":{"type":"string"},"default":""},{"name":"verified_at_start_timestamp","in":"query","description":"Represents the starting timestamp when contracts verified. Taking into account only with `verified` filter.","required":false,"schema":{"type":"string"},"default":""},{"name":"verified_at_end_timestamp","in":"query","description":"Represents the ending timestamp when contracts verified. Taking into account only with `verified` filter.","required":false,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":[{"ABI":"[{\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event\\"\\n}, {\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event2\\"\\n}, {\\n\\"type\\":\\"function\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\"}],\\n\\"name\\":\\"foo\\",\\n\\"outputs\\": []\\n}]\\n","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","ContractName":"Test","OptimizationUsed":"1","SourceCode":"pragma solidity >0.4.24;\\n\\ncontract Test {\\nconstructor() public { b = hex\\"12345678901234567890123456789012\\"; }\\nevent Event(uint indexed a, bytes32 b);\\nevent Event2(uint indexed a, bytes32 b);\\nfunction foo(uint a) public { emit Event(a, b); }\\nbytes32 b;\\n}\\n"}],"status":"1"}}}}}}},"/getabi":{"get":{"tags":["Contract"],"summary":"?module=contract&action=getabi&address={addressHash}","description":"Get ABI for verified contract. Also available through a GraphQL \'addresses\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getabi"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0xB529283cB363703BD7c049D8Cf157249C2bC32dE"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":"[{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"burn\\",\\"outputs\\":[{\\"name\\":\\"success\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"constant\\":true,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"is_expired\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"constant\\":false,\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"is_burnt\\",\\"outputs\\":[{\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"name\\":\\"voucher_token\\",\\"type\\":\\"bytes32\\"},{\\"name\\":\\"_lifetime\\",\\"type\\":\\"uint256\\"}],\\"payable\\":false,\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"}]","status":"1"}}}}}}},"/getsourcecode":{"get":{"tags":["Contract"],"summary":"?module=contract&action=getsourcecode&address={addressHash}","description":"Get contract source code for verified contract. Also available through a GraphQL \'addresses\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getsourcecode"},{"name":"address","in":"query","description":"A 160-bit code used for identifying contracts.","required":true,"schema":{"type":"string"},"default":"0xB529283cB363703BD7c049D8Cf157249C2bC32dE"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"ABI":"[{\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event\\"\\n}, {\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event2\\"\\n}, {\\n\\"type\\":\\"function\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\"}],\\n\\"name\\":\\"foo\\",\\n\\"outputs\\": []\\n}]\\n","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","ContractName":"Test","FileName":"{sourcify path or empty}","ImplementationAddress":"0x000000000000000000000000000000000000000e","IsProxy":"true","OptimizationUsed":"1","SourceCode":"pragma solidity >0.4.24;\\n\\ncontract Test {\\nconstructor() public { b = hex\\"12345678901234567890123456789012\\"; }\\nevent Event(uint indexed a, bytes32 b);\\nevent Event2(uint indexed a, bytes32 b);\\nfunction foo(uint a) public { emit Event(a, b); }\\nbytes32 b;\\n}\\n"},"status":"1"}}}}}}},"/verify":{"get":{"tags":["Contract"],"summary":"?module=contract&action=verify&addressHash={addressHash}&name={name}&compilerVersion={compilerVersion}&optimization={false}&contractSourceCode={contractSourceCode}","description":"Verify a contract with its source code and contract creation information.","operationId":""}},"/verify_via_sourcify":{"get":{"tags":["Contract"],"summary":"?module=contract&action=verify_via_sourcify&addressHash={addressHash}","description":"Verify a contract through Sourcify.","operationId":""}},"/verify_vyper_contract":{"get":{"tags":["Contract"],"summary":"?module=contract&action=verify_vyper_contract&addressHash={addressHash}&name={name}&compilerVersion={compilerVersion}&contractSourceCode={contractSourceCode}","description":"Verify a vyper contract with its source code and contract creation information.","operationId":""}},"/verifysourcecode":{"get":{"tags":["Contract"],"summary":"?module=contract&action=verifysourcecode&codeformat={solidity-standard-json-input}&contractaddress={contractaddress}&contractname={contractname}&compilerversion={compilerversion}&sourceCode={sourceCode}","description":"Verify a contract with Standard input JSON file. Its interface the same as Etherscan\'s API endpoint","operationId":""}},"/checkverifystatus":{"get":{"tags":["Contract"],"summary":"?module=contract&action=checkverifystatus&guid={identifierString}","description":"Return status of the verification attempt (works in addition to verifysourcecode method)","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"contract"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"checkverifystatus"},{"name":"guid","in":"query","description":"A string used for identifying verification attempt","required":true,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"ABI":"[{\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event\\"\\n}, {\\n\\"type\\":\\"event\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\",\\"indexed\\":true},{\\"name\\":\\"b\\",\\"type\\":\\"bytes32\\",\\"indexed\\":false}],\\n\\"name\\":\\"Event2\\"\\n}, {\\n\\"type\\":\\"function\\",\\n\\"inputs\\": [{\\"name\\":\\"a\\",\\"type\\":\\"uint256\\"}],\\n\\"name\\":\\"foo\\",\\n\\"outputs\\": []\\n}]\\n","CompilerVersion":"v0.2.1-2016-01-30-91a6b35","ContractName":"Test","FileName":"{sourcify path or empty}","ImplementationAddress":"0x000000000000000000000000000000000000000e","IsProxy":"true","OptimizationUsed":"1","SourceCode":"pragma solidity >0.4.24;\\n\\ncontract Test {\\nconstructor() public { b = hex\\"12345678901234567890123456789012\\"; }\\nevent Event(uint indexed a, bytes32 b);\\nevent Event2(uint indexed a, bytes32 b);\\nfunction foo(uint a) public { emit Event(a, b); }\\nbytes32 b;\\n}\\n"},"status":"1"}}}}}}},"/gettxinfo":{"get":{"tags":["Transaction"],"summary":"?module=transaction&action=gettxinfo&txhash={transactionHash}","description":"Get transaction info.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"transaction"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"gettxinfo"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction.","required":true,"schema":{"type":"string"},"default":"0x7150e67815c085ae8af7efef7cd29a2fe6c874d78cab6a78fcf0f806df27dab1"},{"name":"index","in":"query","description":"A nonnegative integer that represents the log index to be used for pagination.","required":false,"schema":{"type":"integer"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"result":{"revertReason":"No credit of that type","blockNumber":"3","confirmations":"0","from":"0x000000000000000000000000000000000000000c","gasLimit":"91966","gasPrice":"100000","gasUsed":"95123","hash":"0x0000000000000000000000000000000000000000000000000000000000000004","input":"0x04","logs":[{"address":"0x000000000000000000000000000000000000000e","data":"0x00","topics":["First Topic","Second Topic","Third Topic","Fourth Topic"]}],"success":true,"timeStamp":"1541018182","to":"0x000000000000000000000000000000000000000d","value":"67612"},"status":"1"}}}}}}},"/gettxreceiptstatus":{"get":{"tags":["Transaction"],"summary":"?module=transaction&action=gettxreceiptstatus&txhash={transactionHash}","description":"Get transaction receipt status. Also available through a GraphQL \'transaction\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"transaction"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"gettxreceiptstatus"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction.","required":true,"schema":{"type":"string"},"default":"0x7150e67815c085ae8af7efef7cd29a2fe6c874d78cab6a78fcf0f806df27dab1"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"status":"1"},"status":"1"}}}}}}},"/getstatus":{"get":{"tags":["Transaction"],"summary":"?module=transaction&action=getstatus&txhash={transactionHash}","description":"Get error status and error message. Also available through a GraphQL \'transaction\' query.","operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"module","in":"query","description":"A string with the name of the module to be invoked.","required":true,"schema":{"type":"string"},"default":"transaction"},{"name":"action","in":"query","description":"A string with the name of the action to be invoked.","required":true,"schema":{"type":"string"},"default":"getstatus"},{"name":"txhash","in":"query","description":"Transaction hash. Hash of contents of the transaction.","required":true,"schema":{"type":"string"},"default":"0x7150e67815c085ae8af7efef7cd29a2fe6c874d78cab6a78fcf0f806df27dab1"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"schema":{"type":"object","properties":{"message":{"type":"string"},"result":{"type":"array","items":[{"type":"object"}]},"status":{"type":"string"}}},"example":{"message":"OK","result":{"errDescription":"","isError":"0"},"status":"1"}}}}}}},"/transaction/{txid}":{"get":{"tags":["ApiUrl"],"servers":[{"url":"https://zksync2-mainnet-explorer.zksync.io"},{"url":"https://zksync2-testnet-explorer.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"txid","in":"path","description":"transaction id.","required":true,"schema":{"type":"string"},"default":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":{"transactionHash":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c","data":{"contractAddress":"0x3355df6d4c9c3035724fd0e3914de96a5a83aaf4","calldata":"0x095ea7b30000000000000000000000002da10a1e27bf85cedd8ffb1abbe97e53391c02950000000000000000000000000000000000000000000000000000000001a5b8dc","value":"0x0","factoryDeps":null},"isL1Originated":false,"status":"included","fee":"0x528c685fae00","nonce":276,"blockNumber":7355506,"l1BatchNumber":87281,"blockHash":"0x2cc0563445cac843336d0c301433e9e361ca438d5be500a0111cfed52b60506b","indexInBlock":1,"initiatorAddress":"0x4165ac75516763dae3481a5143f31f7b11ed618b","receivedAt":"2023-06-30T02:22:44.514Z","miniblockTimestamp":1688091764,"ethCommitTxHash":"0x61e9ff3761fb369f130cb03e711b109da192ca455c6c0ccd78214b3b66d6c0e6","ethProveTxHash":"0x96d00038ffa6015b679c8d335e1909b7ad19161a52d7fb806e52ecd8c4f2c9b0","ethExecuteTxHash":null,"erc20Transfers":[{"tokenInfo":{"l1Address":"0x0000000000000000000000000000000000000000","l2Address":"0x0000000000000000000000000000000000000000","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","name":"Ether","decimals":18,"usdPrice":"1880.3500"},"from":"0x4165ac75516763dae3481a5143f31f7b11ed618b","to":"0x0000000000000000000000000000000000008001","amount":"0x9360a25ac080"},{"tokenInfo":{"l1Address":"0x0000000000000000000000000000000000000000","l2Address":"0x0000000000000000000000000000000000000000","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","name":"Ether","decimals":18,"usdPrice":"1880.3500"},"from":"0x0000000000000000000000000000000000008001","to":"0x4165ac75516763dae3481a5143f31f7b11ed618b","amount":"0x40d439fb1280"}],"balanceChanges":[{"tokenInfo":{"l1Address":"0x0000000000000000000000000000000000000000","l2Address":"0x0000000000000000000000000000000000000000","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","name":"Ether","decimals":18,"usdPrice":"1880.3500"},"from":"0x4165ac75516763dae3481a5143f31f7b11ed618b","to":"0x0000000000000000000000000000000000008001","amount":"0x9360a25ac080","type":"fee"},{"tokenInfo":{"l1Address":"0x0000000000000000000000000000000000000000","l2Address":"0x0000000000000000000000000000000000000000","address":"0x0000000000000000000000000000000000000000","symbol":"ETH","name":"Ether","decimals":18,"usdPrice":"1880.3500"},"from":"0x0000000000000000000000000000000000008001","to":"0x4165ac75516763dae3481a5143f31f7b11ed618b","amount":"0x40d439fb1280","type":"transfer"}],"type":0,"logs":[{"address":"0x000000000000000000000000000000000000800a","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000004165ac75516763dae3481a5143f31f7b11ed618b","0x0000000000000000000000000000000000000000000000000000000000008001"],"data":"0x00000000000000000000000000000000000000000000000000009360a25ac080","blockHash":"0x2cc0563445cac843336d0c301433e9e361ca438d5be500a0111cfed52b60506b","blockNumber":"0x703c72","l1BatchNumber":"0x154f1","transactionHash":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c","transactionIndex":"0x1","logIndex":"0x3","transactionLogIndex":"0x3","logType":null,"removed":false},{"address":"0x3355df6d4c9c3035724fd0e3914de96a5a83aaf4","topics":["0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","0x0000000000000000000000004165ac75516763dae3481a5143f31f7b11ed618b","0x0000000000000000000000002da10a1e27bf85cedd8ffb1abbe97e53391c0295"],"data":"0x0000000000000000000000000000000000000000000000000000000001a5b8dc","blockHash":"0x2cc0563445cac843336d0c301433e9e361ca438d5be500a0111cfed52b60506b","blockNumber":"0x703c72","l1BatchNumber":"0x154f1","transactionHash":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c","transactionIndex":"0x1","logIndex":"0x4","transactionLogIndex":"0x4","logType":null,"removed":false},{"address":"0x000000000000000000000000000000000000800a","topics":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","0x0000000000000000000000000000000000000000000000000000000000008001","0x0000000000000000000000004165ac75516763dae3481a5143f31f7b11ed618b"],"data":"0x000000000000000000000000000000000000000000000000000040d439fb1280","blockHash":"0x2cc0563445cac843336d0c301433e9e361ca438d5be500a0111cfed52b60506b","blockNumber":"0x703c72","l1BatchNumber":"0x154f1","transactionHash":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c","transactionIndex":"0x1","logIndex":"0x5","transactionLogIndex":"0x5","logType":null,"removed":false}]}}}}}}},"/transactions/{txid}":{"get":{"tags":["ApiUrlV2"],"servers":[{"url":"https://block-explorer-api.mainnet.zksync.io"},{"url":"https://block-explorer-api.testnet.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"txid","in":"path","description":"transaction id.","required":true,"schema":{"type":"string"},"default":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":{"hash":"0xa4e8662d7421b309059674c26487a679f9eb93f144d61915ad38ef5b3d06266c","to":"0x3355df6D4c9C3035724Fd0e3914dE96A5a83aaf4","from":"0x4165ac75516763DAE3481a5143f31F7B11ed618b","data":"0x095ea7b30000000000000000000000002da10a1e27bf85cedd8ffb1abbe97e53391c02950000000000000000000000000000000000000000000000000000000001a5b8dc","value":"0","isL1Originated":false,"fee":"0x528c685fae00","nonce":276,"blockNumber":7355506,"l1BatchNumber":87281,"blockHash":"0x2cc0563445cac843336d0c301433e9e361ca438d5be500a0111cfed52b60506b","transactionIndex":1,"receivedAt":"2023-06-30T02:22:44.514Z","status":"included","commitTxHash":"0x61e9ff3761fb369f130cb03e711b109da192ca455c6c0ccd78214b3b66d6c0e6","executeTxHash":null,"proveTxHash":"0x96d00038ffa6015b679c8d335e1909b7ad19161a52d7fb806e52ecd8c4f2c9b0"}}}}}}},"/batches/{batch}":{"get":{"tags":["ApiUrlV2"],"servers":[{"url":"https://block-explorer-api.mainnet.zksync.io"},{"url":"https://block-explorer-api.testnet.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"batch","in":"path","description":"batch number.","required":true,"schema":{"type":"string"},"default":"100"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":{"number":100,"timestamp":"2023-02-24T18:34:47.000Z","rootHash":"0x050cb89e7fb925034081bea1ba408439b2e6c18015e50d7e9605a7aa92e51153","executedAt":"2023-02-25T06:36:09.779Z","l1TxCount":0,"l2TxCount":2,"commitTxHash":"0x089086d77705c19851f7a5bb0f8c98b2b465fcd29d636bd6f26db7dd4e4dee7b","committedAt":"2023-02-25T05:02:38.346Z","proveTxHash":"0x65d68fff9d989755921ea68de6d4acb61e7f37a6781a1b198265d8b73dcc8fff","provenAt":"2023-02-25T05:03:39.250Z","executeTxHash":"0xe4710b0471e3b6ed10106cf35c19846dd0ab6f77ef03f302aad916708490570c","l1GasPrice":"37489412169","l2FairGasPrice":"250000000","size":2,"status":"verified"}}}}}}},"/address/{address}":{"get":{"tags":["ApiUrlV2"],"servers":[{"url":"https://block-explorer-api.mainnet.zksync.io"},{"url":"https://block-explorer-api.testnet.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"address","in":"path","description":"address","required":true,"schema":{"type":"string"},"default":"0x84d79cd8a60F5EcBd23E99Abd2bC92707219939c"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":{"type":"account","address":"0x84d79cd8a60F5EcBd23E99Abd2bC92707219939c","blockNumber":7374412,"balances":{},"sealedNonce":0,"verifiedNonce":0}}}}}}},"/stats/{stats}":{"get":{"tags":["ApiUrlV2"],"servers":[{"url":"https://block-explorer-api.mainnet.zksync.io"},{"url":"https://block-explorer-api.testnet.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"stats","in":"path","description":"stats","required":true,"schema":{"type":"string"},"default":""}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":""}}}}}},"/blocks/{block}":{"get":{"tags":["ApiUrlV2"],"servers":[{"url":"https://block-explorer-api.mainnet.zksync.io"},{"url":"https://block-explorer-api.testnet.zksync.dev"}],"operationId":"","consumes":[],"produces":["application/json"],"parameters":[{"name":"block","in":"path","description":"block number.","required":true,"schema":{"type":"string"},"default":"100"}],"responses":{"200":{"description":"Operation successful","content":{"application/json":{"example":{"number":100,"hash":"0xf01681d2220bfea4bb888a5543db8c0916274ddb1ea93b144c042c01d8164c95","timestamp":"2023-02-16T16:58:22.000Z","gasUsed":"2297514","l1BatchNumber":24,"l1TxCount":0,"l2TxCount":1,"parentHash":"0xf0972e3051ec68ad34dfacb38353ac059062f9ad5d51a252df04338c66d33d11","gasLimit":"4294967295","baseFeePerGas":"250000000","extraData":"0x","size":1,"status":"verified","commitTxHash":"0xb2a4f45fc959d8115ba1c8dd4b9d64d631d4551ade596fc752f35dc0ed31acd7","executeTxHash":"0x3ba1123e1d864dd8ab7c76cd6699718ea92a20d180b116e1781ebe54b66a0010","proveTxHash":"0x9acb67ced8aef05d6a10bdc0f26a96b38ae1d681653749e1c5d0f903bcea1c9a","committedAt":"2023-02-16T17:29:31.063Z","executedAt":"2023-02-16T21:59:14.165Z","provenAt":"2023-02-16T19:08:15.565Z"}}}}}}}}}')),p=n(62435),l=n(86074),m=function(){var e=(0,r.useSelector)((function(e){return e.chainList.chainSelect})),t=(0,p.useCallback)((function(){return"324"===e.chainIdDec||"280"===e.chainIdDec?(0,l.jsx)(i.Z,{className:"mb-[16px]",message:(0,l.jsx)("a",{target:"_blank",href:"https://docs.blockscout.com/for-users/api/rpc-endpoints",rel:"noreferrer",children:"https://docs.blockscout.com/for-users/api/rpc-endpoints"}),type:"info"}):void 0}),[e]),n=(0,p.useCallback)((function(e){return!(!/zksync2-(mainnet|testnet)-explorer.zksync.(io|dev)/.test(e)&&!/block-explorer-api.(mainnet|testnet).zksync.(io|dev)/.test(e))}),[]);return(0,l.jsxs)(a._z,{ghost:!0,children:[t(),(0,l.jsx)(s.Z,{children:(0,l.jsx)(d.Z,{tryItOutEnabled:!0,spec:u,requestSnippetsEnabled:!0,requestInterceptor:function(t){if(t.hasOwnProperty("loadSpec")&&t.loadSpec)return t;console.log(t);var a=c()(t);return"324"===e.chainIdDec?(console.log(t.url.includes("zksync2-mainnet")),n(t.url)||(t.url="https://zksync2-mainnet.zkscan.io/api"+(null==a?void 0:a.search))):"280"===e.chainIdDec&&(n(t.url)||(t.url="https://zksync2-testnet.zkscan.io/api"+(null==a?void 0:a.search))),t}})})]})}},99138:function(e,t,n){"use strict";n.d(t,{Z:function(){return B}});var a=n(89739),s=n(4340),r=n(97937),i=n(21640),o=n(78860),c=n(94184),d=n.n(c),u=n(82225),p=n(62435),l=n(53124),m=n(5467),f=n(96159),b=n(15671),h=n(43144),g=n(32531),y=n(73568);let x=function(e){(0,g.Z)(n,e);var t=(0,y.Z)(n);function n(){var e;return(0,b.Z)(this,n),(e=t.apply(this,arguments)).state={error:void 0,info:{componentStack:""}},e}return(0,h.Z)(n,[{key:"componentDidCatch",value:function(e,t){this.setState({error:e,info:t})}},{key:"render",value:function(){const{message:e,description:t,children:n}=this.props,{error:a,info:s}=this.state,r=s&&s.componentStack?s.componentStack:null,i=void 0===e?(a||"").toString():e,o=void 0===t?r:t;return a?p.createElement(B,{type:"error",message:i,description:p.createElement("pre",{style:{fontSize:"0.9em",overflowX:"auto"}},o)}):n}}]),n}(p.Component);var v=x,q=n(67968),k=n(45503),A=n(14747);const j=(e,t,n,a,s)=>({backgroundColor:e,border:`${a.lineWidth}px ${a.lineType} ${t}`,[`${s}-icon`]:{color:n}}),w=e=>{const{componentCls:t,motionDurationSlow:n,marginXS:a,marginSM:s,fontSize:r,fontSizeLG:i,lineHeight:o,borderRadiusLG:c,motionEaseInOutCirc:d,alertIconSizeLG:u,colorText:p,paddingContentVerticalSM:l,alertPaddingHorizontal:m,paddingMD:f,paddingContentHorizontalLG:b}=e;return{[t]:Object.assign(Object.assign({},(0,A.Wf)(e)),{position:"relative",display:"flex",alignItems:"center",padding:`${l}px ${m}px`,wordWrap:"break-word",borderRadius:c,[`&${t}-rtl`]:{direction:"rtl"},[`${t}-content`]:{flex:1,minWidth:0},[`${t}-icon`]:{marginInlineEnd:a,lineHeight:0},"&-description":{display:"none",fontSize:r,lineHeight:o},"&-message":{color:p},[`&${t}-motion-leave`]:{overflow:"hidden",opacity:1,transition:`max-height ${n} ${d}, opacity ${n} ${d},\n        padding-top ${n} ${d}, padding-bottom ${n} ${d},\n        margin-bottom ${n} ${d}`},[`&${t}-motion-leave-active`]:{maxHeight:0,marginBottom:"0 !important",paddingTop:0,paddingBottom:0,opacity:0}}),[`${t}-with-description`]:{alignItems:"flex-start",paddingInline:b,paddingBlock:f,[`${t}-icon`]:{marginInlineEnd:s,fontSize:u,lineHeight:0},[`${t}-message`]:{display:"block",marginBottom:a,color:p,fontSize:i},[`${t}-description`]:{display:"block"}},[`${t}-banner`]:{marginBottom:0,border:"0 !important",borderRadius:0}}},C=e=>{const{componentCls:t,colorSuccess:n,colorSuccessBorder:a,colorSuccessBg:s,colorWarning:r,colorWarningBorder:i,colorWarningBg:o,colorError:c,colorErrorBorder:d,colorErrorBg:u,colorInfo:p,colorInfoBorder:l,colorInfoBg:m}=e;return{[t]:{"&-success":j(s,a,n,e,t),"&-info":j(m,l,p,e,t),"&-warning":j(o,i,r,e,t),"&-error":Object.assign(Object.assign({},j(u,d,c,e,t)),{[`${t}-description > pre`]:{margin:0,padding:0}})}}},I=e=>{const{componentCls:t,iconCls:n,motionDurationMid:a,marginXS:s,fontSizeIcon:r,colorIcon:i,colorIconHover:o}=e;return{[t]:{"&-action":{marginInlineStart:s},[`${t}-close-icon`]:{marginInlineStart:s,padding:0,overflow:"hidden",fontSize:r,lineHeight:`${r}px`,backgroundColor:"transparent",border:"none",outline:"none",cursor:"pointer",[`${n}-close`]:{color:i,transition:`color ${a}`,"&:hover":{color:o}}},"&-close-text":{color:i,transition:`color ${a}`,"&:hover":{color:o}}}}},O=e=>[w(e),C(e),I(e)];var E=(0,q.Z)("Alert",(e=>{const{fontSizeHeading3:t}=e,n=(0,k.TS)(e,{alertIconSizeLG:t,alertPaddingHorizontal:12});return[O(n)]})),T=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(a=Object.getOwnPropertySymbols(e);s<a.length;s++)t.indexOf(a[s])<0&&Object.prototype.propertyIsEnumerable.call(e,a[s])&&(n[a[s]]=e[a[s]])}return n};const H={success:a.Z,info:o.Z,error:s.Z,warning:i.Z},_=e=>{const{icon:t,prefixCls:n,type:a}=e,s=H[a]||null;return t?(0,f.wm)(t,p.createElement("span",{className:`${n}-icon`},t),(()=>({className:d()(`${n}-icon`,{[t.props.className]:t.props.className})}))):p.createElement(s,{className:`${n}-icon`})},S=e=>{const{isClosable:t,closeText:n,prefixCls:a,closeIcon:s,handleClose:r}=e;return t?p.createElement("button",{type:"button",onClick:r,className:`${a}-close-icon`,tabIndex:0},n?p.createElement("span",{className:`${a}-close-text`},n):s):null},N=e=>{var{description:t,prefixCls:n,message:a,banner:s,className:i,rootClassName:o,style:c,onMouseEnter:f,onMouseLeave:b,onClick:h,afterClose:g,showIcon:y,closable:x,closeText:v,closeIcon:q=p.createElement(r.Z,null),action:k}=e,A=T(e,["description","prefixCls","message","banner","className","rootClassName","style","onMouseEnter","onMouseLeave","onClick","afterClose","showIcon","closable","closeText","closeIcon","action"]);const[j,w]=p.useState(!1),C=p.useRef(),{getPrefixCls:I,direction:O}=p.useContext(l.E_),H=I("alert",n),[N,B]=E(H),G=e=>{var t;w(!0),null===(t=A.onClose)||void 0===t||t.call(A,e)},$=!!v||x,z=(()=>{const{type:e}=A;return void 0!==e?e:s?"warning":"info"})(),D=!(!s||void 0!==y)||y,R=d()(H,`${H}-${z}`,{[`${H}-with-description`]:!!t,[`${H}-no-icon`]:!D,[`${H}-banner`]:!!s,[`${H}-rtl`]:"rtl"===O},i,o,B),U=(0,m.Z)(A);return N(p.createElement(u.ZP,{visible:!j,motionName:`${H}-motion`,motionAppear:!1,motionEnter:!1,onLeaveStart:e=>({maxHeight:e.offsetHeight}),onLeaveEnd:g},(e=>{let{className:n,style:s}=e;return p.createElement("div",Object.assign({ref:C,"data-show":!j,className:d()(R,n),style:Object.assign(Object.assign({},c),s),onMouseEnter:f,onMouseLeave:b,onClick:h,role:"alert"},U),D?p.createElement(_,{description:t,icon:A.icon,prefixCls:H,type:z}):null,p.createElement("div",{className:`${H}-content`},a?p.createElement("div",{className:`${H}-message`},a):null,t?p.createElement("div",{className:`${H}-description`},t):null),k?p.createElement("div",{className:`${H}-action`},k):null,p.createElement(S,{isClosable:!!$,closeText:v,prefixCls:H,closeIcon:q,handleClose:G}))})))};N.ErrorBoundary=v;var B=N},18317:function(e,t,n){"use strict";var a=n(8575),s=a.parse,r=a.Url;function i(e){var t=e.url;if(void 0!==t){var n=e._parsedUrl;return c(t,n)?n:((n=o(t))._raw=t,e._parsedUrl=n)}}function o(e){if("string"!=typeof e||47!==e.charCodeAt(0))return s(e);for(var t=e,n=null,a=null,i=1;i<e.length;i++)switch(e.charCodeAt(i)){case 63:null===a&&(t=e.substring(0,i),n=e.substring(i+1),a=e.substring(i));break;case 9:case 10:case 12:case 13:case 32:case 35:case 160:case 65279:return s(e)}var o=void 0!==r?new r:{};return o.path=e,o.href=e,o.pathname=t,null!==a&&(o.query=n,o.search=a),o}function c(e,t){return"object"==typeof t&&null!==t&&(void 0===r||t instanceof r)&&t._raw===e}e.exports=i,e.exports.original=function(e){var t=e.originalUrl;if("string"!=typeof t)return i(e);var n=e._parsedOriginalUrl;if(c(t,n))return n;return n=o(t),n._raw=t,e._parsedOriginalUrl=n}},24654:function(){}}]);